name: opal-s3

services:
  broadcast_channel:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"

  postgres_data:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=opal_data
      - POSTGRES_USER=opal_user
      - POSTGRES_PASSWORD=opal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./roles.txt:/docker-entrypoint-initdb.d/data.json
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opal_user -d opal_data"]
      interval: 10s
      timeout: 5s
      retries: 5

  opal_server:
    image: permitio/opal-server:latest
    environment:
      - OPAL_BROADCAST_URI=postgres://postgres:postgres@broadcast_channel:5432/postgres
      - UVICORN_NUM_WORKERS=4
      # Policy Source Configuration
      - POLICY_SOURCE_TYPE=API
      - POLICY_BUNDLE_URL=https://<bucketname>.s3.amazonaws.com
      - POLICY_BUNDLE_SERVER_TYPE=AWS-S3
      - POLICY_BUNDLE_SERVER_TOKEN_ID=your-access-key
      - POLICY_BUNDLE_SERVER_TOKEN=your-secret-key
      # Polling interval for policy updates (in seconds)
      - OPAL_POLICY_REPO_POLLING_INTERVAL=30
      # Keep the same data source configuration as original
      - OPAL_DATA_CONFIG_SOURCES={"config":{"entries":[{"url":"postgresql://opal_user:opal_password@postgres_data:5432/opal_data","config":{"fetcher":"PostgresFetchProvider","query":"WITH role_data AS (SELECT role, json_object_agg(resource, scopes ORDER BY resource) as resource_scopes FROM roles GROUP BY role ORDER BY role) SELECT json_object_agg(role, resource_scopes ORDER BY role)::jsonb as roles FROM role_data;","connection_params":{"password":"opal_password"}},"topics":["policy_data"], "periodic_update_interval":10}]}}
    ports:
      - "7002:7002"
    depends_on:
      - broadcast_channel
      - postgres_data

  opal_client:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - OPAL_SERVER_URL=http://opal_server:7002
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
      - OPAL_INLINE_OPA_LOG_FORMAT=http
      - OPAL_FETCH_PROVIDER_MODULES=opal_common.fetcher.providers,opal_fetcher_postgres.provider
    ports:
      - "7766:7000"
      - "8181:8181"
    depends_on:
      - opal_server
      - postgres_data
    command: sh -c "exec ./wait-for.sh opal_server:7002 --timeout=20 -- ./start.sh"

volumes:
  postgres_data:
